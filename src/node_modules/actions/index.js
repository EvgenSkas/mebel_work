import { 
	FETCH_PHONES_START,
	FETCH_PHONES_SUCCESS,
	FETCH_PHONES_FAILURE,
	LOAD_MORE_FURNITURE_START,
	LOAD_MORE_FURNITURE_SUCCESS,
	LOAD_MORE_FURNITURE_FAILURE,
	FETCH_FURNITURE_BY_ID_START,
	FETCH_FURNITURE_BY_ID_SUCCESS,
	FETCH_FURNITURE_BY_ID_FAILURE,
	ADD_FURNITURE_TO_BASKET,
	SEARCH_FURNITURE,
	FETCH_CATEGORIES_SUCCESS,
	FETCH_CATEGORIES_START,
	FETCH_CATEGORIES_FAILURE
} from 'actionTypes';
import { 
	fetchFurniture as fetchFurnitureApi,
	loadMoreFurniture as loadMoreFurnitureApi,
	fetchFurnitureById as fetchFurnitureByIdApi,
	fetchCategories as fetchCategoriesApi
 } from 'api';
import { getRenderedFurnitureLength } from 'selectors';

export const fetchFurniture = () => async dispatch => {
	dispatch({type: FETCH_PHONES_START})

	try {
		const furniture = await fetchFurnitureApi();
		dispatch({
			type: FETCH_PHONES_SUCCESS,
			payload: furniture
		})
	} catch(error) {
		dispatch({
			type: FETCH_PHONES_FAILURE,
			payload: error,
			error: true
		})
	}
}

export const loadMoreFurniture = () => async (dispatch, getState) => {
	const offset = getRenderedFurnitureLength(getState());
	dispatch({type: LOAD_MORE_FURNITURE_START})

	try {
		const furniture = await loadMoreFurnitureApi({offset});
		
		dispatch({
			type: LOAD_MORE_FURNITURE_SUCCESS,
			payload: furniture
		})
	} catch(error) {
		dispatch({
			type: LOAD_MORE_FURNITURE_FAILURE,
			payload: error,
			error: true
		})
	}
}

export const fetchFurnitureById = id => async dispatch => {
	dispatch({type: FETCH_FURNITURE_BY_ID_START})

	try {
		const furnitureItem = await fetchFurnitureByIdApi(id);
		
		dispatch({
			type: FETCH_FURNITURE_BY_ID_SUCCESS,
			payload: furnitureItem
		})
	} catch(error) {
		dispatch({
			type: FETCH_FURNITURE_BY_ID_FAILURE,
			payload: error,
			error: true
		})
	}
}

export const addFurnitureToBasket = id => dispatch => {
	dispatch({
		type: ADD_FURNITURE_TO_BASKET,
		payload: id
	})
}

export const searchFurniture = text => dispatch => {
	dispatch({
		type: SEARCH_FURNITURE,
		payload: text
	})
}

export const fetchCategories = () => async dispatch => {
	dispatch({type: FETCH_CATEGORIES_START})

	try {
		const categories = await fetchCategoriesApi();
		dispatch({
			type: FETCH_CATEGORIES_SUCCESS,
			payload: categories
		})
	} catch(error) {
		dispatch({
			type: FETCH_CATEGORIES_FAILURE,
			payload: error,
			error: true
		})
	}
}