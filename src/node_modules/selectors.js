import R from 'ramda';

export const getFurnitureById = (state, id) => R.prop(id, state.furniture)
export const getActiveCategoryId = ownProps => R.path(['params', 'id'], ownProps);
export const getFurniture = (state, ownProps) => {
	const activeCategoryId = getActiveCategoryId(ownProps)
	const applySearch = item => R.contains(
		state.furniturePage.search,
		R.prop('name', item)
	)
	const applyCategory = item => R.equels(
		activeCategoryId,
		R.prop('categoryId', item)
	)

	const furniture = R.compose(
		R.filter(applySearch),
		R.when(R.always(activeCategoryId), R.filter(applyCategory)),
		R.map(id => getFurnitureById(state, id))
	)(state.furniturePage.ids)
	return furniture;
}

export const getRenderedFurnitureLength = state => R.length(state.furniturePage.ids);

export const getTotalBasketCount = state => R.length(state.basket);

export const getTotalBasketPrice = state => {
	const totalPrice = R.compose(
		R.sum,
		R.pluck('price'),
		R.map(id => getFurnitureById(state,id))
	)(state.basket)
	return totalPrice;
}
export const getCategories = state => R.values(state.categories);

